DIGEST 4d46578873e41c537df5b594fd10a59f
FCyclone_LN_Types
R278:298 Cyclone_Formal_Syntax <> <> lib
mod 370:370 <> T
def 398:402 T subst
R412:414 Cyclone_Formal_Syntax <> Tau ind
R426:428 TLC.LibVar Variables var defax
R436:438 Cyclone_Formal_Syntax <> Tau ind
R454:456 Cyclone_Formal_Syntax <> Tau ind
R470:470 Cyclone_LN_Types <> t var
R484:488 Cyclone_Formal_Syntax <> btvar constr
R500:504 Cyclone_Formal_Syntax <> btvar constr
R514:518 Cyclone_Formal_Syntax <> ftvar constr
R530:533 TLC.LibLogic <> :type_scope:'If'_x_'then'_x_'else'_x not
R546:552 TLC.LibLogic <> :type_scope:'If'_x_'then'_x_'else'_x not
R556:562 TLC.LibLogic <> :type_scope:'If'_x_'then'_x_'else'_x not
R573:573 TLC.LibLogic <> :type_scope:'If'_x_'then'_x_'else'_x not
R563:567 Cyclone_Formal_Syntax <> ftvar constr
R553:555 Cyclone_LN_Types <> tau var
R539:541 Coq.Init.Logic <> :type_scope:x_'='_x not
R534:538 Cyclone_LN_Types <> alpha var
R581:584 Cyclone_Formal_Syntax <> cint constr
R597:600 Cyclone_Formal_Syntax <> cint constr
R608:612 Cyclone_Formal_Syntax <> cross constr
R624:628 Cyclone_Formal_Syntax <> cross constr
R652:656 Cyclone_LN_Types <> subst def
R662:666 Cyclone_LN_Types <> alpha var
R658:660 Cyclone_LN_Types <> tau var
R631:635 Cyclone_LN_Types <> subst def
R641:645 Cyclone_LN_Types <> alpha var
R637:639 Cyclone_LN_Types <> tau var
R678:682 Cyclone_Formal_Syntax <> arrow constr
R694:698 Cyclone_Formal_Syntax <> arrow constr
R722:726 Cyclone_LN_Types <> subst def
R732:736 Cyclone_LN_Types <> alpha var
R728:730 Cyclone_LN_Types <> tau var
R701:705 Cyclone_LN_Types <> subst def
R711:715 Cyclone_LN_Types <> alpha var
R707:709 Cyclone_LN_Types <> tau var
R748:752 Cyclone_Formal_Syntax <> ptype constr
R764:768 Cyclone_Formal_Syntax <> ptype constr
R771:775 Cyclone_LN_Types <> subst def
R781:785 Cyclone_LN_Types <> alpha var
R777:779 Cyclone_LN_Types <> tau var
R797:801 Cyclone_Formal_Syntax <> utype constr
R813:817 Cyclone_Formal_Syntax <> utype constr
R822:826 Cyclone_LN_Types <> subst def
R832:836 Cyclone_LN_Types <> alpha var
R828:830 Cyclone_LN_Types <> tau var
R848:852 Cyclone_Formal_Syntax <> etype constr
R864:868 Cyclone_Formal_Syntax <> etype constr
R875:879 Cyclone_LN_Types <> subst def
R885:889 Cyclone_LN_Types <> alpha var
R881:883 Cyclone_LN_Types <> tau var
R957:961 Cyclone_LN_Types T subst def
not 931:931 T :cyclone_scope:'['_x_'T>'_x_']'_x
def 1016:1023 T open_rec
R1031:1033 Coq.Init.Datatypes <> nat ind
R1041:1043 Cyclone_Formal_Syntax <> Tau ind
R1053:1055 Cyclone_Formal_Syntax <> Tau ind
R1075:1077 Cyclone_Formal_Syntax <> Tau ind
R1089:1091 Cyclone_LN_Types <> tau var
R1104:1108 Cyclone_Formal_Syntax <> btvar constr
R1121:1123 TLC.LibLogic <> :type_scope:'If'_x_'then'_x_'else'_x not
R1129:1134 TLC.LibLogic <> :type_scope:'If'_x_'then'_x_'else'_x not
R1136:1141 TLC.LibLogic <> :type_scope:'If'_x_'then'_x_'else'_x not
R1142:1146 Cyclone_Formal_Syntax <> btvar constr
R1135:1135 Cyclone_LN_Types <> t var
R1125:1127 Coq.Init.Logic <> :type_scope:x_'='_x not
R1124:1124 Cyclone_LN_Types <> k var
R1155:1159 Cyclone_Formal_Syntax <> ftvar constr
R1172:1176 Cyclone_Formal_Syntax <> ftvar constr
R1185:1188 Cyclone_Formal_Syntax <> cint constr
R1202:1205 Cyclone_Formal_Syntax <> cint constr
R1212:1216 Cyclone_Formal_Syntax <> cross constr
R1229:1233 Cyclone_Formal_Syntax <> cross constr
R1254:1261 Cyclone_LN_Types <> open_rec def
R1265:1265 Cyclone_LN_Types <> t var
R1263:1263 Cyclone_LN_Types <> k var
R1236:1243 Cyclone_LN_Types <> open_rec def
R1247:1247 Cyclone_LN_Types <> t var
R1245:1245 Cyclone_LN_Types <> k var
R1276:1280 Cyclone_Formal_Syntax <> arrow constr
R1293:1297 Cyclone_Formal_Syntax <> arrow constr
R1318:1325 Cyclone_LN_Types <> open_rec def
R1329:1329 Cyclone_LN_Types <> t var
R1327:1327 Cyclone_LN_Types <> k var
R1300:1307 Cyclone_LN_Types <> open_rec def
R1311:1311 Cyclone_LN_Types <> t var
R1309:1309 Cyclone_LN_Types <> k var
R1340:1344 Cyclone_Formal_Syntax <> ptype constr
R1357:1361 Cyclone_Formal_Syntax <> ptype constr
R1364:1371 Cyclone_LN_Types <> open_rec def
R1375:1375 Cyclone_LN_Types <> t var
R1373:1373 Cyclone_LN_Types <> k var
R1386:1390 Cyclone_Formal_Syntax <> utype constr
R1403:1407 Cyclone_Formal_Syntax <> utype constr
R1413:1420 Cyclone_LN_Types <> open_rec def
R1428:1428 Cyclone_LN_Types <> t var
R1423:1423 Coq.Init.Datatypes <> S constr
R1425:1425 Cyclone_LN_Types <> k var
R1439:1443 Cyclone_Formal_Syntax <> etype constr
R1456:1460 Cyclone_Formal_Syntax <> etype constr
R1468:1475 Cyclone_LN_Types <> open_rec def
R1483:1483 Cyclone_LN_Types <> t var
R1478:1478 Coq.Init.Datatypes <> S constr
R1480:1480 Cyclone_LN_Types <> k var
def 1508:1511 T open
R1522:1529 Cyclone_LN_Types T open_rec def
R1535:1537 Cyclone_LN_Types <> tau var
R1533:1533 Cyclone_LN_Types <> t var
R1569:1576 Cyclone_LN_Types T open_rec def
not 1550:1550 T :cyclone_scope:'{'_x_'T>'_x_'}'_x
R1651:1654 Cyclone_LN_Types T open def
not 1632:1632 T :cyclone_scope:x_'T^^'_x
R1733:1736 Cyclone_LN_Types T open def
R1739:1743 Cyclone_Formal_Syntax <> ftvar constr
not 1714:1714 T :cyclone_scope:x_'T^'_x
def 1821:1829 T close_rec
R1836:1838 Coq.Init.Datatypes <> nat ind
R1846:1848 TLC.LibVar Variables var defax
R1856:1858 Cyclone_Formal_Syntax <> Tau ind
R1863:1865 Cyclone_Formal_Syntax <> Tau ind
R1878:1878 Cyclone_LN_Types <> t var
R1892:1896 Cyclone_Formal_Syntax <> btvar constr
R1909:1909 Cyclone_LN_Types <> t var
R1917:1921 Cyclone_Formal_Syntax <> ftvar constr
R1934:1936 TLC.LibLogic <> :type_scope:'If'_x_'then'_x_'else'_x not
R1942:1948 TLC.LibLogic <> :type_scope:'If'_x_'then'_x_'else'_x not
R1956:1962 TLC.LibLogic <> :type_scope:'If'_x_'then'_x_'else'_x not
R1963:1963 Cyclone_LN_Types <> t var
R1949:1953 Cyclone_Formal_Syntax <> btvar constr
R1955:1955 Cyclone_LN_Types <> k var
R1938:1940 Coq.Init.Logic <> :type_scope:x_'='_x not
R1941:1941 Cyclone_LN_Types <> v var
R1971:1974 Cyclone_Formal_Syntax <> cint constr
R1988:1991 Cyclone_Formal_Syntax <> cint constr
R1999:2003 Cyclone_Formal_Syntax <> cross constr
R2016:2020 Cyclone_Formal_Syntax <> cross constr
R2042:2050 Cyclone_LN_Types <> close_rec def
R2054:2054 Cyclone_LN_Types <> v var
R2052:2052 Cyclone_LN_Types <> k var
R2023:2031 Cyclone_LN_Types <> close_rec def
R2035:2035 Cyclone_LN_Types <> v var
R2033:2033 Cyclone_LN_Types <> k var
R2066:2070 Cyclone_Formal_Syntax <> arrow constr
R2083:2087 Cyclone_Formal_Syntax <> arrow constr
R2109:2117 Cyclone_LN_Types <> close_rec def
R2121:2121 Cyclone_LN_Types <> v var
R2119:2119 Cyclone_LN_Types <> k var
R2090:2098 Cyclone_LN_Types <> close_rec def
R2102:2102 Cyclone_LN_Types <> v var
R2100:2100 Cyclone_LN_Types <> k var
R2133:2137 Cyclone_Formal_Syntax <> ptype constr
R2150:2154 Cyclone_Formal_Syntax <> ptype constr
R2157:2165 Cyclone_LN_Types <> close_rec def
R2169:2169 Cyclone_LN_Types <> v var
R2167:2167 Cyclone_LN_Types <> k var
R2181:2185 Cyclone_Formal_Syntax <> utype constr
R2198:2202 Cyclone_Formal_Syntax <> utype constr
R2208:2216 Cyclone_LN_Types <> close_rec def
R2224:2224 Cyclone_LN_Types <> v var
R2219:2219 Coq.Init.Datatypes <> S constr
R2221:2221 Cyclone_LN_Types <> k var
R2236:2240 Cyclone_Formal_Syntax <> etype constr
R2253:2257 Cyclone_Formal_Syntax <> etype constr
R2265:2273 Cyclone_LN_Types <> close_rec def
R2281:2281 Cyclone_LN_Types <> v var
R2276:2276 Coq.Init.Datatypes <> S constr
R2278:2278 Cyclone_LN_Types <> k var
def 2306:2310 T close
R2319:2327 Cyclone_LN_Types T close_rec def
R2333:2333 Cyclone_LN_Types <> t var
R2331:2331 Cyclone_LN_Types <> v var
R2365:2373 Cyclone_LN_Types T close_rec def
not 2346:2346 T :cyclone_scope:'{'_x_'<T'_x_'}'_x
def 2455:2456 T fv
R2465:2467 Cyclone_Formal_Syntax <> Tau ind
R2485:2488 TLC.LibVar Variables vars def
R2500:2502 Cyclone_LN_Types <> tau var
R2515:2519 Cyclone_Formal_Syntax <> btvar constr
R2531:2533 TLC.LibFset FsetSig :fset_scope:'\{}' not
R2541:2545 Cyclone_Formal_Syntax <> ftvar constr
R2557:2558 TLC.LibFset FsetSig :fset_scope:'\{'_x_'}' not
R2560:2560 TLC.LibFset FsetSig :fset_scope:'\{'_x_'}' not
R2568:2571 Cyclone_Formal_Syntax <> cint constr
R2584:2586 TLC.LibFset FsetSig :fset_scope:'\{}' not
R2594:2598 Cyclone_Formal_Syntax <> cross constr
R2610:2610 TLC.LibFset FsetSig :fset_scope:x_'\u'_x not
R2616:2621 TLC.LibFset FsetSig :fset_scope:x_'\u'_x not
R2627:2627 TLC.LibFset FsetSig :fset_scope:x_'\u'_x not
R2611:2612 Cyclone_LN_Types <> fv def
R2622:2623 Cyclone_LN_Types <> fv def
R2635:2639 Cyclone_Formal_Syntax <> arrow constr
R2651:2651 TLC.LibFset FsetSig :fset_scope:x_'\u'_x not
R2657:2662 TLC.LibFset FsetSig :fset_scope:x_'\u'_x not
R2668:2668 TLC.LibFset FsetSig :fset_scope:x_'\u'_x not
R2652:2653 Cyclone_LN_Types <> fv def
R2663:2664 Cyclone_LN_Types <> fv def
R2676:2680 Cyclone_Formal_Syntax <> ptype constr
R2693:2694 Cyclone_LN_Types <> fv def
R2706:2710 Cyclone_Formal_Syntax <> utype constr
R2723:2724 Cyclone_LN_Types <> fv def
R2736:2740 Cyclone_Formal_Syntax <> etype constr
R2753:2754 Cyclone_LN_Types <> fv def
R2782:2789 TLC.LibFset FsetSig :fset_scope:x_'\notin'_x not
R2790:2791 Cyclone_LN_Types T fv def
def 2831:2836 T closed
R2847:2849 Coq.Init.Logic <> :type_scope:x_'='_x not
R2843:2844 Cyclone_LN_Types T fv def
R2846:2846 Cyclone_LN_Types <> t var
R2850:2852 TLC.LibFset FsetSig :fset_scope:'\{}' not
def 2865:2868 T size
R2877:2879 Cyclone_Formal_Syntax <> Tau ind
R2897:2899 Coq.Init.Datatypes <> nat ind
R2912:2914 Cyclone_LN_Types <> tau var
R2927:2931 Cyclone_Formal_Syntax <> btvar constr
R2951:2955 Cyclone_Formal_Syntax <> ftvar constr
R2975:2978 Cyclone_Formal_Syntax <> cint constr
R2999:3003 Cyclone_Formal_Syntax <> cross constr
R3028:3031 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R3039:3039 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R3016:3019 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R3027:3027 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R3020:3023 Cyclone_LN_Types <> size def
R3032:3035 Cyclone_LN_Types <> size def
R3047:3051 Cyclone_Formal_Syntax <> arrow constr
R3076:3079 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R3087:3087 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R3064:3067 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R3075:3075 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R3068:3071 Cyclone_LN_Types <> size def
R3080:3083 Cyclone_LN_Types <> size def
R3095:3099 Cyclone_Formal_Syntax <> ptype constr
R3112:3115 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R3123:3123 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R3116:3119 Cyclone_LN_Types <> size def
R3131:3135 Cyclone_Formal_Syntax <> utype constr
R3148:3151 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R3159:3159 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R3152:3155 Cyclone_LN_Types <> size def
R3167:3171 Cyclone_Formal_Syntax <> etype constr
R3184:3187 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R3195:3195 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R3188:3191 Cyclone_LN_Types <> size def
ind 3249:3250 T lc
constr 3273:3280 T lc_ftvar
constr 3310:3316 T lc_cint
constr 3332:3339 T lc_cross
constr 3395:3402 T lc_arrow
constr 3458:3465 T lc_ptype
constr 3506:3513 T lc_utype
constr 3695:3702 T lc_etype
R3257:3260 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3254:3256 Cyclone_Formal_Syntax <> Tau ind
R3294:3295 Cyclone_LN_Types <> lc ind
R3298:3302 Cyclone_Formal_Syntax <> ftvar constr
R3304:3304 Cyclone_LN_Types <> x var
R3321:3322 Cyclone_LN_Types <> lc ind
R3324:3327 Cyclone_Formal_Syntax <> cint constr
R3362:3365 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3371:3374 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3375:3376 Cyclone_LN_Types <> lc ind
R3379:3383 Cyclone_Formal_Syntax <> cross constr
R3388:3389 Cyclone_LN_Types <> t1 var
R3385:3386 Cyclone_LN_Types <> t0 var
R3366:3367 Cyclone_LN_Types <> lc ind
R3369:3370 Cyclone_LN_Types <> t1 var
R3357:3358 Cyclone_LN_Types <> lc ind
R3360:3361 Cyclone_LN_Types <> t0 var
R3425:3428 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3434:3437 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3438:3439 Cyclone_LN_Types <> lc ind
R3442:3446 Cyclone_Formal_Syntax <> arrow constr
R3451:3452 Cyclone_LN_Types <> t1 var
R3448:3449 Cyclone_LN_Types <> t0 var
R3429:3430 Cyclone_LN_Types <> lc ind
R3432:3433 Cyclone_LN_Types <> t1 var
R3420:3421 Cyclone_LN_Types <> lc ind
R3423:3424 Cyclone_LN_Types <> t0 var
R3485:3488 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3489:3490 Cyclone_LN_Types <> lc ind
R3493:3497 Cyclone_Formal_Syntax <> ptype constr
R3499:3500 Cyclone_LN_Types <> t0 var
R3480:3481 Cyclone_LN_Types <> lc ind
R3483:3484 Cyclone_LN_Types <> t0 var
R3553:3553 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3651:3675 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3676:3677 Cyclone_LN_Types <> lc ind
R3680:3684 Cyclone_Formal_Syntax <> utype constr
R3688:3689 Cyclone_LN_Types <> t0 var
R3686:3686 Cyclone_LN_Types <> k var
R3570:3572 TLC.LibVar Variables var defax
R3592:3618 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3619:3620 Cyclone_LN_Types <> lc ind
R3623:3630 Cyclone_LN_Types T open_rec def
R3648:3649 Cyclone_LN_Types <> t0 var
R3635:3639 Cyclone_Formal_Syntax <> ftvar constr
R3641:3645 Cyclone_LN_Types <> alpha var
R3582:3589 TLC.LibFset FsetSig :fset_scope:x_'\notin'_x not
R3577:3581 Cyclone_LN_Types <> alpha var
R3590:3591 Cyclone_LN_Types <> L' var
R3742:3742 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3834:3856 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3857:3858 Cyclone_LN_Types <> lc ind
R3861:3865 Cyclone_Formal_Syntax <> etype constr
R3871:3872 Cyclone_LN_Types <> t0 var
R3869:3869 Cyclone_LN_Types <> k var
R3867:3867 Cyclone_LN_Types <> p var
R3759:3761 TLC.LibVar Variables var defax
R3780:3801 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3802:3803 Cyclone_LN_Types <> lc ind
R3806:3813 Cyclone_LN_Types T open_rec def
R3831:3832 Cyclone_LN_Types <> t0 var
R3818:3822 Cyclone_Formal_Syntax <> ftvar constr
R3824:3828 Cyclone_LN_Types <> alpha var
R3770:3777 TLC.LibFset FsetSig :fset_scope:x_'\notin'_x not
R3765:3769 Cyclone_LN_Types <> alpha var
R3778:3779 Cyclone_LN_Types <> L' var
def 3888:3891 T body
R3900:3906 TLC.LibTactics <> :type_scope:'exists'_x_','_x not
R3908:3909 TLC.LibTactics <> :type_scope:'exists'_x_','_x not
R3938:3941 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3942:3943 Cyclone_LN_Types T lc ind
R3946:3949 Cyclone_LN_Types T open def
R3965:3965 Cyclone_LN_Types <> t var
R3952:3956 Cyclone_Formal_Syntax <> ftvar constr
R3958:3962 Cyclone_LN_Types <> alpha var
R3929:3936 TLC.LibFset FsetSig :fset_scope:x_'\notin'_x not
R3924:3928 Cyclone_LN_Types <> alpha var
R3988:3989 Cyclone_LN_Types <> lc ind
R4273:4276 TLC.LibVar Variables vars def
R4281:4281 Cyclone_LN_Types <> x var
R4325:4327 TLC.LibVar Variables var defax
R4333:4334 TLC.LibFset FsetSig :fset_scope:'\{'_x_'}' not
R4336:4336 TLC.LibFset FsetSig :fset_scope:'\{'_x_'}' not
R4335:4335 Cyclone_LN_Types <> x var
R4380:4382 Cyclone_Formal_Syntax <> Tau ind
R4387:4388 Cyclone_LN_Types T fv def
R4390:4390 Cyclone_LN_Types <> x var
R4408:4412 TLC.LibFset FsetSig :fset_scope:x_'\u'_x not
R4421:4421 TLC.LibFset FsetSig :fset_scope:x_'\u'_x not
R4415:4418 TLC.LibFset FsetSig :fset_scope:x_'\u'_x not
R4687:4690 TLC.LibFset FsetSig :fset_scope:x_'\u'_x not
R5180:5180 Cyclone_LN_Types T <> mod
